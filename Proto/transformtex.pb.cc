// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: transformtex.proto
// Protobuf C++ Version: 5.29.3

#include "transformtex.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr TransformTexResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : texture_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        posx_{0},
        posy_{0},
        posz_{0},
        pitch_{0},
        yaw_{0},
        roll_{0},
        scalex_{0},
        scaley_{0},
        scalez_{0},
        texwidth_{0},
        texheight_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransformTexResponse::TransformTexResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransformTexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformTexResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformTexResponseDefaultTypeInternal() {}
  union {
    TransformTexResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformTexResponseDefaultTypeInternal _TransformTexResponse_default_instance_;

inline constexpr TransformTexRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : modelname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransformTexRequest::TransformTexRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransformTexRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformTexRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformTexRequestDefaultTypeInternal() {}
  union {
    TransformTexRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformTexRequestDefaultTypeInternal _TransformTexRequest_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_transformtex_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_transformtex_2eproto = nullptr;
const ::uint32_t
    TableStruct_transformtex_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TransformTexRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TransformTexRequest, _impl_.modelname_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.posx_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.posy_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.posz_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.pitch_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.yaw_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.roll_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.scalex_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.scaley_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.scalez_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.texwidth_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.texheight_),
        PROTOBUF_FIELD_OFFSET(::TransformTexResponse, _impl_.texture_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::TransformTexRequest)},
        {9, -1, -1, sizeof(::TransformTexResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_TransformTexRequest_default_instance_._instance,
    &::_TransformTexResponse_default_instance_._instance,
};
const char descriptor_table_protodef_transformtex_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022transformtex.proto\"(\n\023TransformTexRequ"
    "est\022\021\n\tmodelName\030\001 \001(\t\"\320\001\n\024TransformTexR"
    "esponse\022\014\n\004posX\030\001 \001(\002\022\014\n\004posY\030\002 \001(\002\022\014\n\004p"
    "osZ\030\003 \001(\002\022\r\n\005pitch\030\004 \001(\002\022\013\n\003yaw\030\005 \001(\002\022\014\n"
    "\004roll\030\006 \001(\002\022\016\n\006scaleX\030\007 \001(\002\022\016\n\006scaleY\030\010 "
    "\001(\002\022\016\n\006scaleZ\030\t \001(\002\022\020\n\010texWidth\030\n \001(\005\022\021\n"
    "\ttexHeight\030\013 \001(\005\022\017\n\007texture\030\014 \001(\0142T\n\020Tra"
    "nsformTexSync\022@\n\017GetTransformTex\022\024.Trans"
    "formTexRequest\032\025.TransformTexResponse\"\000b"
    "\006proto3"
};
static ::absl::once_flag descriptor_table_transformtex_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_transformtex_2eproto = {
    false,
    false,
    367,
    descriptor_table_protodef_transformtex_2eproto,
    "transformtex.proto",
    &descriptor_table_transformtex_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_transformtex_2eproto::offsets,
    file_level_enum_descriptors_transformtex_2eproto,
    file_level_service_descriptors_transformtex_2eproto,
};
// ===================================================================

class TransformTexRequest::_Internal {
 public:
};

TransformTexRequest::TransformTexRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TransformTexRequest)
}
inline PROTOBUF_NDEBUG_INLINE TransformTexRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::TransformTexRequest& from_msg)
      : modelname_(arena, from.modelname_),
        _cached_size_{0} {}

TransformTexRequest::TransformTexRequest(
    ::google::protobuf::Arena* arena,
    const TransformTexRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransformTexRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:TransformTexRequest)
}
inline PROTOBUF_NDEBUG_INLINE TransformTexRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : modelname_(arena),
        _cached_size_{0} {}

inline void TransformTexRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TransformTexRequest::~TransformTexRequest() {
  // @@protoc_insertion_point(destructor:TransformTexRequest)
  SharedDtor(*this);
}
inline void TransformTexRequest::SharedDtor(MessageLite& self) {
  TransformTexRequest& this_ = static_cast<TransformTexRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.modelname_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TransformTexRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TransformTexRequest(arena);
}
constexpr auto TransformTexRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TransformTexRequest),
                                            alignof(TransformTexRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TransformTexRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TransformTexRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TransformTexRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TransformTexRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TransformTexRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TransformTexRequest>(), &TransformTexRequest::ByteSizeLong,
            &TransformTexRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TransformTexRequest, _impl_._cached_size_),
        false,
    },
    &TransformTexRequest::kDescriptorMethods,
    &descriptor_table_transformtex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TransformTexRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> TransformTexRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TransformTexRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string modelName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexRequest, _impl_.modelname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string modelName = 1;
    {PROTOBUF_FIELD_OFFSET(TransformTexRequest, _impl_.modelname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\11\0\0\0\0\0\0"
    "TransformTexRequest"
    "modelName"
  }},
};

PROTOBUF_NOINLINE void TransformTexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TransformTexRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modelname_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TransformTexRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TransformTexRequest& this_ = static_cast<const TransformTexRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TransformTexRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TransformTexRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TransformTexRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string modelName = 1;
          if (!this_._internal_modelname().empty()) {
            const std::string& _s = this_._internal_modelname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TransformTexRequest.modelName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TransformTexRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TransformTexRequest::ByteSizeLong(const MessageLite& base) {
          const TransformTexRequest& this_ = static_cast<const TransformTexRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TransformTexRequest::ByteSizeLong() const {
          const TransformTexRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TransformTexRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string modelName = 1;
            if (!this_._internal_modelname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_modelname());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TransformTexRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransformTexRequest*>(&to_msg);
  auto& from = static_cast<const TransformTexRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TransformTexRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_modelname().empty()) {
    _this->_internal_set_modelname(from._internal_modelname());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransformTexRequest::CopyFrom(const TransformTexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransformTexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransformTexRequest::InternalSwap(TransformTexRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modelname_, &other->_impl_.modelname_, arena);
}

::google::protobuf::Metadata TransformTexRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransformTexResponse::_Internal {
 public:
};

TransformTexResponse::TransformTexResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TransformTexResponse)
}
inline PROTOBUF_NDEBUG_INLINE TransformTexResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::TransformTexResponse& from_msg)
      : texture_(arena, from.texture_),
        _cached_size_{0} {}

TransformTexResponse::TransformTexResponse(
    ::google::protobuf::Arena* arena,
    const TransformTexResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransformTexResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, posx_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, posx_),
           offsetof(Impl_, texheight_) -
               offsetof(Impl_, posx_) +
               sizeof(Impl_::texheight_));

  // @@protoc_insertion_point(copy_constructor:TransformTexResponse)
}
inline PROTOBUF_NDEBUG_INLINE TransformTexResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : texture_(arena),
        _cached_size_{0} {}

inline void TransformTexResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, posx_),
           0,
           offsetof(Impl_, texheight_) -
               offsetof(Impl_, posx_) +
               sizeof(Impl_::texheight_));
}
TransformTexResponse::~TransformTexResponse() {
  // @@protoc_insertion_point(destructor:TransformTexResponse)
  SharedDtor(*this);
}
inline void TransformTexResponse::SharedDtor(MessageLite& self) {
  TransformTexResponse& this_ = static_cast<TransformTexResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.texture_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TransformTexResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TransformTexResponse(arena);
}
constexpr auto TransformTexResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TransformTexResponse),
                                            alignof(TransformTexResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TransformTexResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TransformTexResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TransformTexResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TransformTexResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TransformTexResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TransformTexResponse>(), &TransformTexResponse::ByteSizeLong,
            &TransformTexResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_._cached_size_),
        false,
    },
    &TransformTexResponse::kDescriptorMethods,
    &descriptor_table_transformtex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TransformTexResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 0, 2> TransformTexResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TransformTexResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float posX = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.posx_)}},
    // float posY = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.posy_)}},
    // float posZ = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.posz_)}},
    // float pitch = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.pitch_)}},
    // float yaw = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.yaw_)}},
    // float roll = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.roll_)}},
    // float scaleX = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.scalex_)}},
    // float scaleY = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.scaley_)}},
    // float scaleZ = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.scalez_)}},
    // int32 texWidth = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TransformTexResponse, _impl_.texwidth_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.texwidth_)}},
    // int32 texHeight = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TransformTexResponse, _impl_.texheight_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.texheight_)}},
    // bytes texture = 12;
    {::_pbi::TcParser::FastBS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.texture_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float posX = 1;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.posx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float posY = 2;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.posy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float posZ = 3;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.posz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch = 4;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.pitch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yaw = 5;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.yaw_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float roll = 6;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.roll_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float scaleX = 7;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.scalex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float scaleY = 8;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.scaley_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float scaleZ = 9;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.scalez_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 texWidth = 10;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.texwidth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 texHeight = 11;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.texheight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes texture = 12;
    {PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.texture_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TransformTexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TransformTexResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.texture_.ClearToEmpty();
  ::memset(&_impl_.posx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.texheight_) -
      reinterpret_cast<char*>(&_impl_.posx_)) + sizeof(_impl_.texheight_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TransformTexResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TransformTexResponse& this_ = static_cast<const TransformTexResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TransformTexResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TransformTexResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TransformTexResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float posX = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_posx()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_posx(), target);
          }

          // float posY = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_posy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_posy(), target);
          }

          // float posZ = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_posz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_posz(), target);
          }

          // float pitch = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_pitch()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_pitch(), target);
          }

          // float yaw = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_yaw(), target);
          }

          // float roll = 6;
          if (::absl::bit_cast<::uint32_t>(this_._internal_roll()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_roll(), target);
          }

          // float scaleX = 7;
          if (::absl::bit_cast<::uint32_t>(this_._internal_scalex()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_scalex(), target);
          }

          // float scaleY = 8;
          if (::absl::bit_cast<::uint32_t>(this_._internal_scaley()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_scaley(), target);
          }

          // float scaleZ = 9;
          if (::absl::bit_cast<::uint32_t>(this_._internal_scalez()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_scalez(), target);
          }

          // int32 texWidth = 10;
          if (this_._internal_texwidth() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_texwidth(), target);
          }

          // int32 texHeight = 11;
          if (this_._internal_texheight() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<11>(
                    stream, this_._internal_texheight(), target);
          }

          // bytes texture = 12;
          if (!this_._internal_texture().empty()) {
            const std::string& _s = this_._internal_texture();
            target = stream->WriteBytesMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TransformTexResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TransformTexResponse::ByteSizeLong(const MessageLite& base) {
          const TransformTexResponse& this_ = static_cast<const TransformTexResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TransformTexResponse::ByteSizeLong() const {
          const TransformTexResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TransformTexResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes texture = 12;
            if (!this_._internal_texture().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_texture());
            }
            // float posX = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_posx()) != 0) {
              total_size += 5;
            }
            // float posY = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_posy()) != 0) {
              total_size += 5;
            }
            // float posZ = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_posz()) != 0) {
              total_size += 5;
            }
            // float pitch = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_pitch()) != 0) {
              total_size += 5;
            }
            // float yaw = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw()) != 0) {
              total_size += 5;
            }
            // float roll = 6;
            if (::absl::bit_cast<::uint32_t>(this_._internal_roll()) != 0) {
              total_size += 5;
            }
            // float scaleX = 7;
            if (::absl::bit_cast<::uint32_t>(this_._internal_scalex()) != 0) {
              total_size += 5;
            }
            // float scaleY = 8;
            if (::absl::bit_cast<::uint32_t>(this_._internal_scaley()) != 0) {
              total_size += 5;
            }
            // float scaleZ = 9;
            if (::absl::bit_cast<::uint32_t>(this_._internal_scalez()) != 0) {
              total_size += 5;
            }
            // int32 texWidth = 10;
            if (this_._internal_texwidth() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_texwidth());
            }
            // int32 texHeight = 11;
            if (this_._internal_texheight() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_texheight());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TransformTexResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransformTexResponse*>(&to_msg);
  auto& from = static_cast<const TransformTexResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TransformTexResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_texture().empty()) {
    _this->_internal_set_texture(from._internal_texture());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_posx()) != 0) {
    _this->_impl_.posx_ = from._impl_.posx_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_posy()) != 0) {
    _this->_impl_.posy_ = from._impl_.posy_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_posz()) != 0) {
    _this->_impl_.posz_ = from._impl_.posz_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_pitch()) != 0) {
    _this->_impl_.pitch_ = from._impl_.pitch_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw()) != 0) {
    _this->_impl_.yaw_ = from._impl_.yaw_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_roll()) != 0) {
    _this->_impl_.roll_ = from._impl_.roll_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_scalex()) != 0) {
    _this->_impl_.scalex_ = from._impl_.scalex_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_scaley()) != 0) {
    _this->_impl_.scaley_ = from._impl_.scaley_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_scalez()) != 0) {
    _this->_impl_.scalez_ = from._impl_.scalez_;
  }
  if (from._internal_texwidth() != 0) {
    _this->_impl_.texwidth_ = from._impl_.texwidth_;
  }
  if (from._internal_texheight() != 0) {
    _this->_impl_.texheight_ = from._impl_.texheight_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransformTexResponse::CopyFrom(const TransformTexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransformTexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransformTexResponse::InternalSwap(TransformTexResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.texture_, &other->_impl_.texture_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.texheight_)
      + sizeof(TransformTexResponse::_impl_.texheight_)
      - PROTOBUF_FIELD_OFFSET(TransformTexResponse, _impl_.posx_)>(
          reinterpret_cast<char*>(&_impl_.posx_),
          reinterpret_cast<char*>(&other->_impl_.posx_));
}

::google::protobuf::Metadata TransformTexResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_transformtex_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
