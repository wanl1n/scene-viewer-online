// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: scene.proto
// Protobuf C++ Version: 5.29.3

#ifndef scene_2eproto_2epb_2eh
#define scene_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_scene_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_scene_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_scene_2eproto;
class Model;
struct ModelDefaultTypeInternal;
extern ModelDefaultTypeInternal _Model_default_instance_;
class SceneRequest;
struct SceneRequestDefaultTypeInternal;
extern SceneRequestDefaultTypeInternal _SceneRequest_default_instance_;
class SceneResponse;
struct SceneResponseDefaultTypeInternal;
extern SceneResponseDefaultTypeInternal _SceneResponse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SceneRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SceneRequest) */ {
 public:
  inline SceneRequest() : SceneRequest(nullptr) {}
  ~SceneRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SceneRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SceneRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneRequest(const SceneRequest& from) : SceneRequest(nullptr, from) {}
  inline SceneRequest(SceneRequest&& from) noexcept
      : SceneRequest(nullptr, std::move(from)) {}
  inline SceneRequest& operator=(const SceneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneRequest& operator=(SceneRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneRequest* internal_default_instance() {
    return reinterpret_cast<const SceneRequest*>(
        &_SceneRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SceneRequest& a, SceneRequest& b) { a.Swap(&b); }
  inline void Swap(SceneRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SceneRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneRequest& from) { SceneRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SceneRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SceneRequest"; }

 protected:
  explicit SceneRequest(::google::protobuf::Arena* arena);
  SceneRequest(::google::protobuf::Arena* arena, const SceneRequest& from);
  SceneRequest(::google::protobuf::Arena* arena, SceneRequest&& from) noexcept
      : SceneRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSceneIdFieldNumber = 1,
  };
  // int32 sceneId = 1;
  void clear_sceneid() ;
  ::int32_t sceneid() const;
  void set_sceneid(::int32_t value);

  private:
  ::int32_t _internal_sceneid() const;
  void _internal_set_sceneid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SceneRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneRequest& from_msg);
    ::int32_t sceneid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class Model final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Model) */ {
 public:
  inline Model() : Model(nullptr) {}
  ~Model() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Model* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Model));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Model(
      ::google::protobuf::internal::ConstantInitialized);

  inline Model(const Model& from) : Model(nullptr, from) {}
  inline Model(Model&& from) noexcept
      : Model(nullptr, std::move(from)) {}
  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model& operator=(Model&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
        &_Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Model& a, Model& b) { a.Swap(&b); }
  inline void Swap(Model* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Model>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Model& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Model& from) { Model::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Model* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Model"; }

 protected:
  explicit Model(::google::protobuf::Arena* arena);
  Model(::google::protobuf::Arena* arena, const Model& from);
  Model(::google::protobuf::Arena* arena, Model&& from) noexcept
      : Model(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModelNameFieldNumber = 1,
    kModelDataFieldNumber = 2,
    kTextureFieldNumber = 14,
    kPosXFieldNumber = 3,
    kPosYFieldNumber = 4,
    kPosZFieldNumber = 5,
    kPitchFieldNumber = 6,
    kYawFieldNumber = 7,
    kRollFieldNumber = 8,
    kScaleXFieldNumber = 9,
    kScaleYFieldNumber = 10,
    kScaleZFieldNumber = 11,
    kTexWidthFieldNumber = 12,
    kTexHeightFieldNumber = 13,
  };
  // string modelName = 1;
  void clear_modelname() ;
  const std::string& modelname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_modelname(Arg_&& arg, Args_... args);
  std::string* mutable_modelname();
  PROTOBUF_NODISCARD std::string* release_modelname();
  void set_allocated_modelname(std::string* value);

  private:
  const std::string& _internal_modelname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_modelname(
      const std::string& value);
  std::string* _internal_mutable_modelname();

  public:
  // string modelData = 2;
  void clear_modeldata() ;
  const std::string& modeldata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_modeldata(Arg_&& arg, Args_... args);
  std::string* mutable_modeldata();
  PROTOBUF_NODISCARD std::string* release_modeldata();
  void set_allocated_modeldata(std::string* value);

  private:
  const std::string& _internal_modeldata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_modeldata(
      const std::string& value);
  std::string* _internal_mutable_modeldata();

  public:
  // bytes texture = 14;
  void clear_texture() ;
  const std::string& texture() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_texture(Arg_&& arg, Args_... args);
  std::string* mutable_texture();
  PROTOBUF_NODISCARD std::string* release_texture();
  void set_allocated_texture(std::string* value);

  private:
  const std::string& _internal_texture() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_texture(
      const std::string& value);
  std::string* _internal_mutable_texture();

  public:
  // float posX = 3;
  void clear_posx() ;
  float posx() const;
  void set_posx(float value);

  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);

  public:
  // float posY = 4;
  void clear_posy() ;
  float posy() const;
  void set_posy(float value);

  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);

  public:
  // float posZ = 5;
  void clear_posz() ;
  float posz() const;
  void set_posz(float value);

  private:
  float _internal_posz() const;
  void _internal_set_posz(float value);

  public:
  // float pitch = 6;
  void clear_pitch() ;
  float pitch() const;
  void set_pitch(float value);

  private:
  float _internal_pitch() const;
  void _internal_set_pitch(float value);

  public:
  // float yaw = 7;
  void clear_yaw() ;
  float yaw() const;
  void set_yaw(float value);

  private:
  float _internal_yaw() const;
  void _internal_set_yaw(float value);

  public:
  // float roll = 8;
  void clear_roll() ;
  float roll() const;
  void set_roll(float value);

  private:
  float _internal_roll() const;
  void _internal_set_roll(float value);

  public:
  // float scaleX = 9;
  void clear_scalex() ;
  float scalex() const;
  void set_scalex(float value);

  private:
  float _internal_scalex() const;
  void _internal_set_scalex(float value);

  public:
  // float scaleY = 10;
  void clear_scaley() ;
  float scaley() const;
  void set_scaley(float value);

  private:
  float _internal_scaley() const;
  void _internal_set_scaley(float value);

  public:
  // float scaleZ = 11;
  void clear_scalez() ;
  float scalez() const;
  void set_scalez(float value);

  private:
  float _internal_scalez() const;
  void _internal_set_scalez(float value);

  public:
  // int32 texWidth = 12;
  void clear_texwidth() ;
  ::int32_t texwidth() const;
  void set_texwidth(::int32_t value);

  private:
  ::int32_t _internal_texwidth() const;
  void _internal_set_texwidth(::int32_t value);

  public:
  // int32 texHeight = 13;
  void clear_texheight() ;
  ::int32_t texheight() const;
  void set_texheight(::int32_t value);

  private:
  ::int32_t _internal_texheight() const;
  void _internal_set_texheight(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Model)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Model& from_msg);
    ::google::protobuf::internal::ArenaStringPtr modelname_;
    ::google::protobuf::internal::ArenaStringPtr modeldata_;
    ::google::protobuf::internal::ArenaStringPtr texture_;
    float posx_;
    float posy_;
    float posz_;
    float pitch_;
    float yaw_;
    float roll_;
    float scalex_;
    float scaley_;
    float scalez_;
    ::int32_t texwidth_;
    ::int32_t texheight_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scene_2eproto;
};
// -------------------------------------------------------------------

class SceneResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SceneResponse) */ {
 public:
  inline SceneResponse() : SceneResponse(nullptr) {}
  ~SceneResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SceneResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SceneResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SceneResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SceneResponse(const SceneResponse& from) : SceneResponse(nullptr, from) {}
  inline SceneResponse(SceneResponse&& from) noexcept
      : SceneResponse(nullptr, std::move(from)) {}
  inline SceneResponse& operator=(const SceneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneResponse& operator=(SceneResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SceneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SceneResponse* internal_default_instance() {
    return reinterpret_cast<const SceneResponse*>(
        &_SceneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SceneResponse& a, SceneResponse& b) { a.Swap(&b); }
  inline void Swap(SceneResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SceneResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SceneResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SceneResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SceneResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SceneResponse& from) { SceneResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SceneResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "SceneResponse"; }

 protected:
  explicit SceneResponse(::google::protobuf::Arena* arena);
  SceneResponse(::google::protobuf::Arena* arena, const SceneResponse& from);
  SceneResponse(::google::protobuf::Arena* arena, SceneResponse&& from) noexcept
      : SceneResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModelsFieldNumber = 1,
  };
  // repeated .Model models = 1;
  int models_size() const;
  private:
  int _internal_models_size() const;

  public:
  void clear_models() ;
  ::Model* mutable_models(int index);
  ::google::protobuf::RepeatedPtrField<::Model>* mutable_models();

  private:
  const ::google::protobuf::RepeatedPtrField<::Model>& _internal_models() const;
  ::google::protobuf::RepeatedPtrField<::Model>* _internal_mutable_models();
  public:
  const ::Model& models(int index) const;
  ::Model* add_models();
  const ::google::protobuf::RepeatedPtrField<::Model>& models() const;
  // @@protoc_insertion_point(class_scope:SceneResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SceneResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Model > models_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_scene_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SceneRequest

// int32 sceneId = 1;
inline void SceneRequest::clear_sceneid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sceneid_ = 0;
}
inline ::int32_t SceneRequest::sceneid() const {
  // @@protoc_insertion_point(field_get:SceneRequest.sceneId)
  return _internal_sceneid();
}
inline void SceneRequest::set_sceneid(::int32_t value) {
  _internal_set_sceneid(value);
  // @@protoc_insertion_point(field_set:SceneRequest.sceneId)
}
inline ::int32_t SceneRequest::_internal_sceneid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sceneid_;
}
inline void SceneRequest::_internal_set_sceneid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sceneid_ = value;
}

// -------------------------------------------------------------------

// SceneResponse

// repeated .Model models = 1;
inline int SceneResponse::_internal_models_size() const {
  return _internal_models().size();
}
inline int SceneResponse::models_size() const {
  return _internal_models_size();
}
inline void SceneResponse::clear_models() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.models_.Clear();
}
inline ::Model* SceneResponse::mutable_models(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:SceneResponse.models)
  return _internal_mutable_models()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Model>* SceneResponse::mutable_models()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SceneResponse.models)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_models();
}
inline const ::Model& SceneResponse::models(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SceneResponse.models)
  return _internal_models().Get(index);
}
inline ::Model* SceneResponse::add_models() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Model* _add = _internal_mutable_models()->Add();
  // @@protoc_insertion_point(field_add:SceneResponse.models)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Model>& SceneResponse::models() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SceneResponse.models)
  return _internal_models();
}
inline const ::google::protobuf::RepeatedPtrField<::Model>&
SceneResponse::_internal_models() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.models_;
}
inline ::google::protobuf::RepeatedPtrField<::Model>*
SceneResponse::_internal_mutable_models() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.models_;
}

// -------------------------------------------------------------------

// Model

// string modelName = 1;
inline void Model::clear_modelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modelname_.ClearToEmpty();
}
inline const std::string& Model::modelname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Model.modelName)
  return _internal_modelname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Model::set_modelname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modelname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Model.modelName)
}
inline std::string* Model::mutable_modelname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_modelname();
  // @@protoc_insertion_point(field_mutable:Model.modelName)
  return _s;
}
inline const std::string& Model::_internal_modelname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.modelname_.Get();
}
inline void Model::_internal_set_modelname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modelname_.Set(value, GetArena());
}
inline std::string* Model::_internal_mutable_modelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.modelname_.Mutable( GetArena());
}
inline std::string* Model::release_modelname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Model.modelName)
  return _impl_.modelname_.Release();
}
inline void Model::set_allocated_modelname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modelname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.modelname_.IsDefault()) {
    _impl_.modelname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Model.modelName)
}

// string modelData = 2;
inline void Model::clear_modeldata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modeldata_.ClearToEmpty();
}
inline const std::string& Model::modeldata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Model.modelData)
  return _internal_modeldata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Model::set_modeldata(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modeldata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Model.modelData)
}
inline std::string* Model::mutable_modeldata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_modeldata();
  // @@protoc_insertion_point(field_mutable:Model.modelData)
  return _s;
}
inline const std::string& Model::_internal_modeldata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.modeldata_.Get();
}
inline void Model::_internal_set_modeldata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modeldata_.Set(value, GetArena());
}
inline std::string* Model::_internal_mutable_modeldata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.modeldata_.Mutable( GetArena());
}
inline std::string* Model::release_modeldata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Model.modelData)
  return _impl_.modeldata_.Release();
}
inline void Model::set_allocated_modeldata(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modeldata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.modeldata_.IsDefault()) {
    _impl_.modeldata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Model.modelData)
}

// float posX = 3;
inline void Model::clear_posx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.posx_ = 0;
}
inline float Model::posx() const {
  // @@protoc_insertion_point(field_get:Model.posX)
  return _internal_posx();
}
inline void Model::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:Model.posX)
}
inline float Model::_internal_posx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.posx_;
}
inline void Model::_internal_set_posx(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.posx_ = value;
}

// float posY = 4;
inline void Model::clear_posy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.posy_ = 0;
}
inline float Model::posy() const {
  // @@protoc_insertion_point(field_get:Model.posY)
  return _internal_posy();
}
inline void Model::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:Model.posY)
}
inline float Model::_internal_posy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.posy_;
}
inline void Model::_internal_set_posy(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.posy_ = value;
}

// float posZ = 5;
inline void Model::clear_posz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.posz_ = 0;
}
inline float Model::posz() const {
  // @@protoc_insertion_point(field_get:Model.posZ)
  return _internal_posz();
}
inline void Model::set_posz(float value) {
  _internal_set_posz(value);
  // @@protoc_insertion_point(field_set:Model.posZ)
}
inline float Model::_internal_posz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.posz_;
}
inline void Model::_internal_set_posz(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.posz_ = value;
}

// float pitch = 6;
inline void Model::clear_pitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_ = 0;
}
inline float Model::pitch() const {
  // @@protoc_insertion_point(field_get:Model.pitch)
  return _internal_pitch();
}
inline void Model::set_pitch(float value) {
  _internal_set_pitch(value);
  // @@protoc_insertion_point(field_set:Model.pitch)
}
inline float Model::_internal_pitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pitch_;
}
inline void Model::_internal_set_pitch(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_ = value;
}

// float yaw = 7;
inline void Model::clear_yaw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_ = 0;
}
inline float Model::yaw() const {
  // @@protoc_insertion_point(field_get:Model.yaw)
  return _internal_yaw();
}
inline void Model::set_yaw(float value) {
  _internal_set_yaw(value);
  // @@protoc_insertion_point(field_set:Model.yaw)
}
inline float Model::_internal_yaw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yaw_;
}
inline void Model::_internal_set_yaw(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_ = value;
}

// float roll = 8;
inline void Model::clear_roll() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roll_ = 0;
}
inline float Model::roll() const {
  // @@protoc_insertion_point(field_get:Model.roll)
  return _internal_roll();
}
inline void Model::set_roll(float value) {
  _internal_set_roll(value);
  // @@protoc_insertion_point(field_set:Model.roll)
}
inline float Model::_internal_roll() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roll_;
}
inline void Model::_internal_set_roll(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roll_ = value;
}

// float scaleX = 9;
inline void Model::clear_scalex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalex_ = 0;
}
inline float Model::scalex() const {
  // @@protoc_insertion_point(field_get:Model.scaleX)
  return _internal_scalex();
}
inline void Model::set_scalex(float value) {
  _internal_set_scalex(value);
  // @@protoc_insertion_point(field_set:Model.scaleX)
}
inline float Model::_internal_scalex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scalex_;
}
inline void Model::_internal_set_scalex(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalex_ = value;
}

// float scaleY = 10;
inline void Model::clear_scaley() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scaley_ = 0;
}
inline float Model::scaley() const {
  // @@protoc_insertion_point(field_get:Model.scaleY)
  return _internal_scaley();
}
inline void Model::set_scaley(float value) {
  _internal_set_scaley(value);
  // @@protoc_insertion_point(field_set:Model.scaleY)
}
inline float Model::_internal_scaley() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scaley_;
}
inline void Model::_internal_set_scaley(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scaley_ = value;
}

// float scaleZ = 11;
inline void Model::clear_scalez() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalez_ = 0;
}
inline float Model::scalez() const {
  // @@protoc_insertion_point(field_get:Model.scaleZ)
  return _internal_scalez();
}
inline void Model::set_scalez(float value) {
  _internal_set_scalez(value);
  // @@protoc_insertion_point(field_set:Model.scaleZ)
}
inline float Model::_internal_scalez() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scalez_;
}
inline void Model::_internal_set_scalez(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scalez_ = value;
}

// int32 texWidth = 12;
inline void Model::clear_texwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.texwidth_ = 0;
}
inline ::int32_t Model::texwidth() const {
  // @@protoc_insertion_point(field_get:Model.texWidth)
  return _internal_texwidth();
}
inline void Model::set_texwidth(::int32_t value) {
  _internal_set_texwidth(value);
  // @@protoc_insertion_point(field_set:Model.texWidth)
}
inline ::int32_t Model::_internal_texwidth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.texwidth_;
}
inline void Model::_internal_set_texwidth(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.texwidth_ = value;
}

// int32 texHeight = 13;
inline void Model::clear_texheight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.texheight_ = 0;
}
inline ::int32_t Model::texheight() const {
  // @@protoc_insertion_point(field_get:Model.texHeight)
  return _internal_texheight();
}
inline void Model::set_texheight(::int32_t value) {
  _internal_set_texheight(value);
  // @@protoc_insertion_point(field_set:Model.texHeight)
}
inline ::int32_t Model::_internal_texheight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.texheight_;
}
inline void Model::_internal_set_texheight(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.texheight_ = value;
}

// bytes texture = 14;
inline void Model::clear_texture() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.texture_.ClearToEmpty();
}
inline const std::string& Model::texture() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Model.texture)
  return _internal_texture();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Model::set_texture(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.texture_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Model.texture)
}
inline std::string* Model::mutable_texture() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_texture();
  // @@protoc_insertion_point(field_mutable:Model.texture)
  return _s;
}
inline const std::string& Model::_internal_texture() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.texture_.Get();
}
inline void Model::_internal_set_texture(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.texture_.Set(value, GetArena());
}
inline std::string* Model::_internal_mutable_texture() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.texture_.Mutable( GetArena());
}
inline std::string* Model::release_texture() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Model.texture)
  return _impl_.texture_.Release();
}
inline void Model::set_allocated_texture(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.texture_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.texture_.IsDefault()) {
    _impl_.texture_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Model.texture)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // scene_2eproto_2epb_2eh
